import React, { useState, useEffect } from "react";
import { CreditCard } from "lucide-react";

export default function PaymentSection({
    wallet,
    qrUrl,
    checkPayment,
    checkingPayment,
    paymentResult,
    onExpire, // H√†m callback khi h·∫øt gi·ªù tu KycPage
}) {
    const [method, setMethod] = useState("crypto");
    const [manualWallet, setManualWallet] = useState("");

    const [timeLeft, setTimeLeft] = useState(600); // 10 ph√∫t crypto, 5 ph√∫t bank
    const [expired, setExpired] = useState(false);
    const amount = 2000;
    qrUrl = `https://qr.sepay.vn/img?bank=VietinBank&acc=101877183706&amount=${amount}&des=SEVQR+TKPTPT${encodeURIComponent(
        wallet
    )}&size=200x200`;
    // Reset timer khi ƒë·ªïi ph∆∞∆°ng th·ª©c
    useEffect(() => {
        setTimeLeft(method === "crypto" ? 600 : 10); // 10p ho·∫∑c 5p
        setExpired(false);
    }, [method]);

    // B·∫Øt ƒë·∫ßu countdown
    useEffect(() => {
        if (expired) return;

        const interval = setInterval(() => {
            setTimeLeft((prev) => {
                if (prev <= 1) {
                    clearInterval(interval);
                    setExpired(true);

                    return 0;
                }
                return prev - 1;
            });
        }, 1000);

        return () => clearInterval(interval);
    }, [expired]);

    // G·ªçi onExpire khi expired thay ƒë·ªïi
    useEffect(() => {
        if (expired) {
            onExpire();
        }
    }, [expired]);

    const formatTime = (seconds) => {
        const m = Math.floor(seconds / 60);
        const s = seconds % 60;
        return `${m}:${s.toString().padStart(2, "0")}`;
    };

    return (
        <div className="bg-white shadow-md rounded-xl p-4 sm:p-6 w-full max-w-xl mx-auto space-y-4 cursor-grab">
            <h2 className="text-2xl font-bold text-indigo-700 text-center">B∆∞·ªõc 2: üí∏ Thanh to√°n KYC</h2>

            {/* <h2 className="text-xl font-bold text-center text-indigo-700 cursor-grab">
                üí≥ Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
            </h2> */}
            <h2 className="text-xl font-semibold text-indigo-700 mb-4 text-center cursor-grab">
                üí≥ Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
            </h2>
            {/* Ch·ªçn ph∆∞∆°ng th·ª©c */}
            <div className="flex justify-center gap-3 text-sm flex-wrap ">
                <button
                    onClick={() => setMethod("crypto")}
                    className={`cursor-grab px-4 py-2 rounded-lg border ${
                        method === "crypto" ? "bg-indigo-600 text-white" : "bg-gray-100 text-gray-800"
                    }`}
                >
                    Ti·ªÅn ƒëi·ªán t·ª≠ (USDT)
                </button>
                <button
                    onClick={() => setMethod("bank")}
                    className={`cursor-grab px-4 py-2 rounded-lg border ${
                        method === "bank" ? "bg-indigo-600 text-white" : "bg-gray-100 text-gray-800"
                    }`}
                >
                    Ng√¢n h√†ng VN
                </button>
            </div>

            {/* Countdown */}
            <div className="text-sm text-center text-gray-600 mb-4">
                ‚è≥ Th·ªùi gian c√≤n l·∫°i: <span className="font-semibold">{formatTime(timeLeft)}</span>
            </div>

            {!expired ? (
                method === "crypto" ? (
                    <>
                        <div className="bg-yellow-50 border border-yellow-200 text-yellow-800 p-4 rounded text-sm">
                            <p className="mb-2">
                                üí∞ Vui l√≤ng chuy·ªÉn <strong>5 USDT (BEP-20)</strong> ƒë·∫øn ƒë·ªãa ch·ªâ:
                            </p>

                            <div className="bg-gray-100 p-3 rounded break-all font-mono text-gray-800 mb-4 text-xs cursor-auto">
                                0x2fecd57da676a1c43c2fec4f47b3d7dc753db2e9
                            </div>

                            <p className="text-sm text-gray-700 mb-2">
                                N·∫øu b·∫°n g·ª≠i t·ª´ s√†n (Binance, OKX,...), vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ v√≠ b·∫°n ƒë√£ d√πng ƒë·ªÉ g·ª≠i:
                            </p>

                            <input
                                type="text"
                                value={manualWallet}
                                onChange={(e) => setManualWallet(e.target.value)}
                                placeholder="V√≠ b·∫°n ƒë√£ d√πng ƒë·ªÉ chuy·ªÉn ti·ªÅn"
                                className="w-full border rounded px-3 py-2 text-sm"
                            />

                            <p className="mt-2">Sau ƒë√≥ nh·∫•n n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ki·ªÉm tra thanh to√°n.</p>
                        </div>

                        <button
                            type="button"
                            onClick={() => checkPayment(manualWallet)}
                            disabled={checkingPayment}
                            className="w-full bg-indigo-600 text-white py-2 px-4 rounded hover:bg-indigo-700 mt-4 cursor-grab"
                        >
                            {checkingPayment ? "ƒêang ki·ªÉm tra..." : "T√¥i ƒë√£ thanh to√°n"}
                        </button>

                        {paymentResult && !paymentResult.success && (
                            <div className="mt-3 text-sm text-red-600 bg-red-50 p-3 rounded">
                                ‚ùå {paymentResult.message || "Ch∆∞a ph√°t hi·ªán giao d·ªãch h·ª£p l·ªá."}
                                <br />
                                üïí Vui l√≤ng th·ª≠ l·∫°i sau v√†i ph√∫t.
                            </div>
                        )}
                    </>
                ) : (
                    <>
                        <div className="bg-green-50 border border-green-200 text-green-800 p-4 rounded text-sm space-y-3 wrap">
                            <p>
                                üí∏ Vui l√≤ng chuy·ªÉn kho·∫£n <strong>{amount.toLocaleString("vi-VN")} VND</strong> t·ªõi t√†i
                                kho·∫£n b√™n d∆∞·ªõi:
                            </p>
                            <div className="bg-white px-3 py-2 rounded border border-green-300 text-sm">
                                Ng√¢n h√†ng: VietinBank
                                <br />
                                STK: <strong>101877183706</strong>
                                <br />
                                N·ªôi dung:{" "}
                                <span className="font-mono break-all inline-block max-w-full">
                                    SEVQR+TKPTPT{wallet || "M√£ v√≠ b·∫°n ƒë√£ k√Ω"}
                                </span>
                            </div>
                            <div className="text-center mt-3">
                                <img src={qrUrl} alt="QR" className="mx-auto w-48 h-48 mb-2" />
                            </div>
                        </div>
                        <button
                            type="button"
                            onClick={() => checkPayment()}
                            disabled={checkingPayment}
                            className="w-full bg-indigo-600 text-white py-2 rounded hover:bg-indigo-700"
                        >
                            {checkingPayment ? "ƒêang x√°c nh·∫≠n‚Ä¶" : "T√¥i ƒë√£ thanh to√°n"}
                        </button>
                        {paymentResult && !paymentResult.success && (
                            <div className="mt-2 text-red-600 text-sm">
                                ‚ùå {paymentResult.message || "Ch∆∞a nh·∫≠n ƒë∆∞·ª£c thanh to√°n."}
                            </div>
                        )}
                    </>
                )
            ) : (
                <div className="bg-red-50 border border-red-300 text-red-700 p-4 rounded text-sm text-center">
                    Phi√™n thanh to√°n ƒë√£ h·∫øt h·∫°n. Vui l√≤ng t·∫°o l·∫°i phi√™n.
                    <button
                        className="mt-2 block mx-auto text-blue-600 underline"
                        onClick={() => window.location.reload()}
                    >
                        üîÑ T·∫°o l·∫°i phi√™n m·ªõi
                    </button>
                </div>
            )}
        </div>
    );
}
